{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/elements/Loader/Loader.js","utils/token.js","components/project/index.js","utils/FetchAPI.js","actions/auth.js","actions/register.js","actions/user.js","actions/project/fetchDetails.js","actions/project/member.js","actions/project/search.js","actions/project/projectDetails.js","actions/label.js","actions/image.js","actions/analytics.js","actions/index.js"],"names":["Loader","props","active","children","className","content","disabled","indeterminate","inline","inverted","size","classes","cx","useKeyOnly","useKeyOrValueAndKey","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","hasToken","user_type","getToken","localStorage","getItem","removeToken","removeItem","setToken","token","boolean","setItem","window","location","href","Loading","error","PrivateRoute","Loadable","loader","loading","Sidebar","ProjectNavbar","Images","Analytics","ProjectDescription","Team","Labels","ProjectIndex","state","this","match","fetchProject","fetchTimeLabel","fetchLabels","params","projectId","actions","history","actionsLabel","Fragment","isfetching","isuploading","exact","path","component","Component","connect","project","projects","currentProject","projectActions","labels","labelActions","dispatch","data","getTimeLabel","FetchApi","method","url","TokenValue","process","REACT_APP_SERVER_ENVIORNMENT","REACT_APP_HOST","REACT_APP_SERVER_PORT","console","log","Promise","resolve","reject","axios","headers","Authorization","TOKEN_TYPE","responseType","then","res","catch","err","login","username","password","callback","email","type","LOGIN_REQUEST","LOGIN_SUCCESS","payload","success","response","failure","msg","statusText","LOGIN_FAILURE","logout","LOGOUT_REQUEST","LOGOUT_SUCCESS","userRegister","REGISTER_REQUEST","REGISTER_SUCCESS","err_field","other","REGISTER_FAILURE","fetchUser","SET_USER_DATA_REQUEST","body","SET_USER_DATA_SUCCESS","SET_USER_DATA_FAILURE","uploadImage","UPLOAD_USER_IMAGE_REQUEST","UPLOAD_USER_IMAGE_SUCCESS","UPLOAD_USER_IMAGE_FAILURE","fetchCount","FETCH_COUNT_REQUEST","FETCH_COUNT_SUCCESS","FETCH_COUNT_FAILURE","getSearchUser","query","SEARCH_USER","SEARCH_USER_FAILURE","editUser","EDIT_USER_INFO","EDIT_USER_INFO_FAILURE","fetchAllProject","FETCH_PROJECT_ALL_REQUEST","FETCH_PROJECT_ALL_SUCCESS","FETCH_PROJECT_ALL_FAILURE","FETCH_PROJECT_REQUEST","FETCH_PROJECT_SUCCESS","FETCH_PROJECT_FAILURE","addMember","ADD_MEMBER_REQUEST","ADD_MEMBER_SUCCESS","ADD_MEMBER_FAILURE","memberDelete","DELETE_MEMBER_REQUEST","memberEmail","DELETE_MEMBER_SUCCESS","DELETE_MEMBER_FAILURE","getSearchProjects","SEARCH_PROJECTS","SEARCH_PROJECTS_FAILURE","initProject","INITIALIZE_PROJECT_REQUEST","INITIALIZE_PROJECT_SUCCESS","_id","INITIALIZE_PROJECT_FAILURE","updateProject","UPDATE_PROJECT_REQUEST","UPDATE_PROJECT_SUCCESS","UPDATE_PROJECT_FAILURE","FETCH_LABEL_REQUEST","FETCH_LABEL_SUCCESS","FETCH_LABEL_FAILURE","createLabel","CREATE_LABEL_REQUEST","label","CREATE_LABEL_SUCCESS","CREATE_LABEL_FAILURE","updateLabels","image_id","labelData","UPDATE_LABEL_REQUEST","UPDATE_LABEL_SUCCESS","UPDATE_LABEL_FAILURE","deleteLabel","label_id","DELETE_LABEL_REQUEST","DELETE_LABEL_SUCCESS","DELETE_LABEL_FAILURE","submitImage","POST_IMAGE_REQUEST","POST_IMAGE_SUCCESS","POST_IMAGE_FAILURE","fetchProjectImage","imageId","FETCH_IMAGE_REQUEST","FETCH_IMAGE_SUCCESS","FETCH_IMAGE_FAILURE","deleteImage","DELETE_IMAGE_REQUEST","DELETE_IMAGE_SUCCESS","DELETE_IMAGE_FAILURE","setNextPrev","next","prev","SET_IMAGE_STATE","request","ANALYTICS_TIME_LABEL_REQUEST","ANALYTICS_TIME_LABEL_SUCCESS","ANALYTICS_TIME_LABEL_FAILURE"],"mappings":"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","file":"static/js/18.7ef01f2f.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\n/**\n * A loader alerts a user to wait for an activity to complete.\n * @see Dimmer\n */\n\nfunction Loader(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      indeterminate = props.indeterminate,\n      inline = props.inline,\n      inverted = props.inverted,\n      size = props.size;\n  var classes = cx('ui', size, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), useKeyOnly(inverted, 'inverted'), useKeyOnly(children || content, 'text'), useKeyOrValueAndKey(inline, 'inline'), 'loader', className);\n  var rest = getUnhandledProps(Loader, props);\n  var ElementType = getElementType(Loader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nLoader.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"disabled\", \"indeterminate\", \"inline\", \"inverted\", \"size\"];\nLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A loader can be active or visible. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A loader can be disabled or hidden. */\n  disabled: PropTypes.bool,\n\n  /** A loader can show it's unsure of how long a task will take. */\n  indeterminate: PropTypes.bool,\n\n  /** Loaders can appear inline with content. */\n  inline: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['centered'])]),\n\n  /** Loaders can have their colors inverted. */\n  inverted: PropTypes.bool,\n\n  /** Loaders can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES)\n} : {};\nexport default Loader;","// @param: user type is required is every function\nexport function hasToken(user_type) {\n  const token = getToken(user_type)\n  return !!token\n}\nexport function getToken(user_type) {\n  return localStorage.getItem(user_type)\n}\nexport function removeToken(user_type) {\n  if (getToken(user_type)) {\n    localStorage.removeItem(user_type)\n  }\n}\nexport function setToken(user_type, token, boolean = false) {\n  localStorage.setItem(user_type, token)\n  if (boolean) {\n    window.location.href = '/login'\n  }\n}\n","import React, { Component } from 'react'\nimport { Switch } from 'react-router-dom'\nimport Loadable from 'react-loadable'\nimport { Dimmer, Loader } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { fetchProject, getTimeLabel, fetchLabels } from '../../actions/index'\nimport Load from '../loading/index'\nimport './css/index.css'\n\nconst Loading = ({ error }) => {\n  if (error) return <div>Error loading component</div>\n  else return <Load />\n}\n\nconst PrivateRoute = Loadable({\n  loader: () => import('../../utils/pR'),\n  loading: Loading\n})\n\nconst Sidebar = Loadable({\n  loader: () => import('./sidebar'),\n  loading: Loading\n})\nconst ProjectNavbar = Loadable({\n  loader: () => import('../navbar/project'),\n  loading: Loading\n})\nconst Images = Loadable({\n  loader: () => import('./images'),\n  loading: Loading\n})\nconst Analytics = Loadable({\n  loader: () => import('./analytics'),\n  loading: Loading\n})\nconst ProjectDescription = Loadable({\n  loader: () => import('./projectDesc'),\n  loading: Loading\n})\nconst Team = Loadable({\n  loader: () => import('./team'),\n  loading: Loading\n})\nconst Labels = Loadable({\n  loader: () => import('./label/index'),\n  loading: Loading\n})\n\nclass ProjectIndex extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n  componentDidMount() {\n    const { match, fetchProject, fetchTimeLabel, fetchLabels } = this.props\n    fetchProject(match.params.projectId)\n    fetchTimeLabel(match.params.projectId)\n    fetchLabels(match.params.projectId)\n  }\n  render() {\n    const { match, actions, history, actionsLabel } = this.props\n    return (\n      <React.Fragment>\n        {actions.isfetching || actionsLabel.isfetching ? (\n          <Dimmer active>\n            <Loader indeterminate>Have some patience :)</Loader>\n          </Dimmer>\n        ) : null}\n        {actions.isuploading ? (\n          <Dimmer active>\n            <Loader indeterminate>Uploading Image</Loader>\n          </Dimmer>\n        ) : null}\n        <ProjectNavbar history={history} />\n        <div className=\"project-main\">\n          <Sidebar history={history} />\n          <div className=\"project-non-side-section\">\n            <ProjectDescription history={history} />\n            <Switch>\n              <PrivateRoute\n                exact\n                path={`${match.path}/team`}\n                component={Team}\n              />\n              <PrivateRoute\n                exact\n                path={`${match.path}/images`}\n                component={Images}\n              />\n              <PrivateRoute\n                exact\n                path={`${match.path}/analytics`}\n                component={Analytics}\n              />\n              <PrivateRoute\n                exact\n                path={`${match.path}/labels`}\n                component={Labels}\n              />\n            </Switch>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nProjectIndex.propTypes = {\n  projects: PropTypes.object,\n  actions: PropTypes.object,\n  history: PropTypes.object,\n  fetchProject: PropTypes.func,\n  fetchTimeLabel: PropTypes.func,\n  match: PropTypes.object,\n  actionsLabel: PropTypes.object,\n  fetchLabels: PropTypes.func\n}\n\nconst mapStateToProps = state => {\n  return {\n    project: state.projects.currentProject,\n    actions: state.projects.projectActions,\n    actionsLabel: state.labels.labelActions\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchLabels: projectId => {\n      return dispatch(fetchLabels(projectId))\n    },\n    fetchProject: data => {\n      return dispatch(fetchProject(data))\n    },\n    fetchTimeLabel: projectId => {\n      return dispatch(getTimeLabel(projectId))\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProjectIndex)\n","import axios from 'axios'\nimport { getToken } from './token'\nimport { TOKEN_TYPE } from '../constants/index'\n\nconst FetchApi = (method, url, params, TokenValue) => {\n  if (process.env.REACT_APP_SERVER_ENVIORNMENT === 'dev') {\n    url =\n      'http://' +\n      process.env.REACT_APP_HOST +\n      ':' +\n      process.env.REACT_APP_SERVER_PORT +\n      url\n  }\n  console.log(url)\n  return new Promise((resolve, reject) => {\n    if (TokenValue) {\n      axios({\n        method: method,\n        url: url,\n        data: params,\n        headers: {\n          Authorization: 'Bearer ' + getToken(TOKEN_TYPE)\n        },\n        responseType: 'json'\n      })\n        .then(res => resolve(res))\n        .catch(err => reject(err))\n    } else {\n      axios({\n        method: method,\n        url: url,\n        data: params,\n        responseType: 'json'\n      })\n        .then(res => resolve(res))\n        .catch(err => reject(err))\n    }\n  })\n}\n\nexport default FetchApi\n","import {\n  LOGIN_REQUEST,\n  LOGIN_FAILURE,\n  LOGIN_SUCCESS,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  TOKEN_TYPE\n} from '../constants/index'\n\nimport FetchApi from '../utils/FetchAPI'\nimport { setToken, removeToken } from '../utils/token'\n\nexport const login = (username, password, callback) => {\n  return dispatch => {\n    const data = {\n      email: username,\n      password: password\n    }\n    dispatch(request())\n    FetchApi('POST', '/api/v1/auth/login', data)\n      .then(res => {\n        if (res.data && res.data.token) {\n          setToken(TOKEN_TYPE, res.data.token)\n          dispatch(success(res.data.token))\n          callback()\n        }\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n\n  function request() {\n    return { type: LOGIN_REQUEST }\n  }\n  function success(data) {\n    return { type: LOGIN_SUCCESS, payload: data }\n  }\n  function failure(error) {\n    return { type: LOGIN_FAILURE, error }\n  }\n}\n\nexport const logout = callback => {\n  return dispatch => {\n    dispatch(request())\n    removeToken(TOKEN_TYPE)\n    dispatch(success())\n    callback()\n  }\n\n  function request() {\n    return { type: LOGOUT_REQUEST }\n  }\n  function success(data) {\n    return { type: LOGOUT_SUCCESS }\n  }\n}\n","import {\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_FAILURE\n} from '../constants/index'\n\nimport FetchApi from '../utils/FetchAPI'\n\nexport const userRegister = (data, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('POST', '/api/v1/auth/register', data)\n      .then(() => {\n        dispatch(success())\n        callback()\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(\n                failure(err.response.data.msg, err.response.data.err_field)\n              )\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: REGISTER_REQUEST }\n  }\n  function success() {\n    return { type: REGISTER_SUCCESS, payload: 'Login to continue!' }\n  }\n  function failure(error, other) {\n    return { type: REGISTER_FAILURE, payload: error, other: other }\n  }\n}\n","import {\n  SET_USER_DATA_FAILURE,\n  SET_USER_DATA_REQUEST,\n  SET_USER_DATA_SUCCESS,\n  UPLOAD_USER_IMAGE_FAILURE,\n  UPLOAD_USER_IMAGE_REQUEST,\n  UPLOAD_USER_IMAGE_SUCCESS,\n  FETCH_COUNT_FAILURE,\n  FETCH_COUNT_REQUEST,\n  FETCH_COUNT_SUCCESS,\n  SEARCH_USER,\n  SEARCH_USER_FAILURE,\n  EDIT_USER_INFO,\n  EDIT_USER_INFO_FAILURE\n} from '../constants/index'\n\nimport FetchApi from '../utils/FetchAPI'\n\nexport const fetchUser = () => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('GET', '/api/v1/users/info', null, true)\n      .then(res => {\n        dispatch(success(res.data.body))\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: SET_USER_DATA_REQUEST }\n  }\n  function success(data) {\n    return { type: SET_USER_DATA_SUCCESS, payload: data }\n  }\n  function failure(error) {\n    return { type: SET_USER_DATA_FAILURE, payload: error }\n  }\n}\n\nexport const uploadImage = (data, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('POST', '/api/v1/users/uploadImage', data, true)\n      .then(() => {\n        dispatch(success())\n        callback('true')\n      })\n      .catch(err => {\n        if (err.response) {\n          dispatch(failure())\n        }\n      })\n  }\n  function request() {\n    return { type: UPLOAD_USER_IMAGE_REQUEST }\n  }\n  function success() {\n    return { type: UPLOAD_USER_IMAGE_SUCCESS }\n  }\n  function failure() {\n    return { type: UPLOAD_USER_IMAGE_FAILURE }\n  }\n}\n\nexport const fetchCount = () => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('GET', '/api/v1/users/fetchCount', null, true)\n      .then(res => {\n        dispatch(success(res.data.body))\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: FETCH_COUNT_REQUEST }\n  }\n  function success(data) {\n    return { type: FETCH_COUNT_SUCCESS, payload: data }\n  }\n  function failure(error) {\n    return { type: FETCH_COUNT_FAILURE, payload: error }\n  }\n}\n\nexport const getSearchUser = query => {\n  return dispatch => {\n    if (!query) {\n      query = 'null'\n    }\n    FetchApi('GET', '/api/v1/users/search/' + query, null, true)\n      .then(response => {\n        dispatch(success(response.data.body))\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(\n                failure(err.response.data.msg, err.response.data.err_field)\n              )\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function success(data) {\n    return { type: SEARCH_USER, payload: data }\n  }\n  function failure(error) {\n    return { type: SEARCH_USER_FAILURE, payload: error }\n  }\n}\n\nexport const editUser = (data, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('PUT', '/api/v1/users/edit', data, true)\n      .then(response => {\n        callback()\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(\n                failure(err.response.data.msg, err.response.data.err_field)\n              )\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: EDIT_USER_INFO }\n  }\n  function failure(error) {\n    return { type: EDIT_USER_INFO_FAILURE, payload: error }\n  }\n}\n","import {\n  FETCH_PROJECT_FAILURE,\n  FETCH_PROJECT_REQUEST,\n  FETCH_PROJECT_SUCCESS,\n  FETCH_PROJECT_ALL_FAILURE,\n  FETCH_PROJECT_ALL_REQUEST,\n  FETCH_PROJECT_ALL_SUCCESS\n} from '../../constants/index'\n\nimport FetchApi from '../../utils/FetchAPI'\n\nexport const fetchAllProject = () => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('GET', '/api/v1/project/get/', null, true)\n      .then(res => {\n        dispatch(success(res.data.body))\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: FETCH_PROJECT_ALL_REQUEST }\n  }\n  function success(data) {\n    return { type: FETCH_PROJECT_ALL_SUCCESS, payload: data }\n  }\n  function failure(error) {\n    return { type: FETCH_PROJECT_ALL_FAILURE, payload: error }\n  }\n}\n\nexport const fetchProject = (data, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('GET', '/api/v1/project/get/' + data, null, true)\n      .then(res => {\n        dispatch(success(res.data.body))\n        callback()\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: FETCH_PROJECT_REQUEST }\n  }\n  function success(data) {\n    return { type: FETCH_PROJECT_SUCCESS, payload: data }\n  }\n  function failure(error) {\n    return { type: FETCH_PROJECT_FAILURE, payload: error }\n  }\n}\n","import {\n  ADD_MEMBER_FAILURE,\n  ADD_MEMBER_REQUEST,\n  ADD_MEMBER_SUCCESS,\n  DELETE_MEMBER_FAILURE,\n  DELETE_MEMBER_REQUEST,\n  DELETE_MEMBER_SUCCESS\n} from '../../constants/index'\n\nimport FetchApi from '../../utils/FetchAPI'\n\nexport const addMember = (data, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('POST', '/api/v1/project/add/' + data.projectId, data, true)\n      .then(res => {\n        dispatch(success())\n        callback()\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: ADD_MEMBER_REQUEST }\n  }\n  function success(data) {\n    return { type: ADD_MEMBER_SUCCESS }\n  }\n  function failure(error) {\n    return { type: ADD_MEMBER_FAILURE, payload: error }\n  }\n}\n\nexport const memberDelete = (email, projectId, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi(\n      'POST',\n      '/api/v1/project/remove/' + projectId,\n      { memberEmail: email },\n      true\n    )\n      .then(res => {\n        dispatch(success())\n        callback()\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: DELETE_MEMBER_REQUEST }\n  }\n  function success() {\n    return { type: DELETE_MEMBER_SUCCESS }\n  }\n  function failure(error) {\n    return { type: DELETE_MEMBER_FAILURE, payload: error }\n  }\n}\n","import { SEARCH_PROJECTS, SEARCH_PROJECTS_FAILURE } from '../../constants/index'\n\nimport FetchApi from '../../utils/FetchAPI'\n\nexport const getSearchProjects = query => {\n  return dispatch => {\n    if (!query) {\n      query = 'null'\n    }\n    FetchApi('GET', '/api/v1/project/search/' + query, null, true)\n      .then(response => {\n        dispatch(success(response.data.body))\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(\n                failure(err.response.data.msg, err.response.data.err_field)\n              )\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function success(data) {\n    return { type: SEARCH_PROJECTS, payload: data }\n  }\n  function failure(error) {\n    return { type: SEARCH_PROJECTS_FAILURE, payload: error }\n  }\n}\n","import {\n  INITIALIZE_PROJECT_FAILURE,\n  INITIALIZE_PROJECT_REQUEST,\n  INITIALIZE_PROJECT_SUCCESS,\n  UPDATE_PROJECT_FAILURE,\n  UPDATE_PROJECT_REQUEST,\n  UPDATE_PROJECT_SUCCESS\n} from '../../constants/index'\n\nimport FetchApi from '../../utils/FetchAPI'\n\nexport const initProject = (data, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('POST', '/api/v1/project/create', data, true)\n      .then(res => {\n        dispatch(success(res.data.body))\n        callback(res.data.body._id)\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: INITIALIZE_PROJECT_REQUEST }\n  }\n  function success(data) {\n    return { type: INITIALIZE_PROJECT_SUCCESS, payload: data }\n  }\n  function failure(error) {\n    return { type: INITIALIZE_PROJECT_FAILURE, payload: error }\n  }\n}\n\nexport const updateProject = (data, projectId, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('PUT', '/api/v1/project/update/' + projectId, data, true)\n      .then(res => {\n        dispatch(success())\n        callback()\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: UPDATE_PROJECT_REQUEST }\n  }\n  function success(data) {\n    return { type: UPDATE_PROJECT_SUCCESS }\n  }\n  function failure(error) {\n    return { type: UPDATE_PROJECT_FAILURE, payload: error }\n  }\n}\n","import {\n  FETCH_LABEL_FAILURE,\n  FETCH_LABEL_REQUEST,\n  FETCH_LABEL_SUCCESS,\n  CREATE_LABEL_FAILURE,\n  CREATE_LABEL_REQUEST,\n  CREATE_LABEL_SUCCESS,\n  UPDATE_LABEL_FAILURE,\n  UPDATE_LABEL_REQUEST,\n  UPDATE_LABEL_SUCCESS,\n  DELETE_LABEL_FAILURE,\n  DELETE_LABEL_REQUEST,\n  DELETE_LABEL_SUCCESS\n} from '../constants/index'\n\nimport FetchApi from '../utils/FetchAPI'\n\nexport const fetchLabels = (projectId, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('GET', '/api/v1/label/' + projectId + '/get', null, true)\n      .then(res => {\n        dispatch(success(res.data.body))\n        callback()\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: FETCH_LABEL_REQUEST }\n  }\n  function success(data) {\n    return { type: FETCH_LABEL_SUCCESS, payload: data }\n  }\n  function failure(error) {\n    return { type: FETCH_LABEL_FAILURE, payload: error }\n  }\n}\n\nexport const createLabel = (data, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi(\n      'POST',\n      '/api/v1/label/' + data.projectId + '/create',\n      { label: data },\n      true\n    )\n      .then(res => {\n        dispatch(success())\n        callback()\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: CREATE_LABEL_REQUEST }\n  }\n  function success() {\n    return { type: CREATE_LABEL_SUCCESS }\n  }\n  function failure(error) {\n    return { type: CREATE_LABEL_FAILURE, payload: error }\n  }\n}\n\nexport const updateLabels = (image_id, labelData) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('PUT', '/api/v1/image/' + image_id + '/update', labelData, true)\n      .then(res => {\n        dispatch(success())\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: UPDATE_LABEL_REQUEST }\n  }\n  function success() {\n    return { type: UPDATE_LABEL_SUCCESS }\n  }\n  function failure(error) {\n    return { type: UPDATE_LABEL_FAILURE, payload: error }\n  }\n}\n\nexport const deleteLabel = (label_id, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('DELETE', '/api/v1/label/' + label_id + '/delete', null, true)\n      .then(res => {\n        dispatch(success())\n        callback()\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: DELETE_LABEL_REQUEST }\n  }\n  function success() {\n    return { type: DELETE_LABEL_SUCCESS }\n  }\n  function failure(error) {\n    return { type: DELETE_LABEL_FAILURE, payload: error }\n  }\n}\n","import {\n  DELETE_IMAGE_FAILURE,\n  DELETE_IMAGE_REQUEST,\n  DELETE_IMAGE_SUCCESS,\n  POST_IMAGE_FAILURE,\n  POST_IMAGE_SUCCESS,\n  POST_IMAGE_REQUEST,\n  FETCH_IMAGE_FAILURE,\n  FETCH_IMAGE_REQUEST,\n  FETCH_IMAGE_SUCCESS,\n  SET_IMAGE_STATE\n} from '../constants/index'\n\nimport FetchApi from '../utils/FetchAPI'\n\nexport const submitImage = (data, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('POST', '/api/v1/image/' + data.projectId + '/create', data, true)\n      .then(res => {\n        dispatch(success(res.data.body))\n        callback()\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: POST_IMAGE_REQUEST }\n  }\n  function success(data) {\n    return { type: POST_IMAGE_SUCCESS, payload: data }\n  }\n  function failure(error) {\n    return { type: POST_IMAGE_FAILURE, payload: error }\n  }\n}\n\nexport const fetchProjectImage = (imageId, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('GET', '/api/v1/image/' + imageId + '/get', null, true)\n      .then(res => {\n        dispatch(success(res.data.body))\n        callback()\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: FETCH_IMAGE_REQUEST }\n  }\n  function success(data) {\n    return { type: FETCH_IMAGE_SUCCESS, payload: data }\n  }\n  function failure(error) {\n    return { type: FETCH_IMAGE_FAILURE, payload: error }\n  }\n}\n\nexport const deleteImage = (imageId, projectId, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi('DELETE', '/api/v1/image/' + imageId + '/delete', null, true)\n      .then(res => {\n        dispatch(success())\n        callback()\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: DELETE_IMAGE_REQUEST }\n  }\n  function success() {\n    return { type: DELETE_IMAGE_SUCCESS }\n  }\n  function failure(error) {\n    return { type: DELETE_IMAGE_FAILURE, payload: error }\n  }\n}\n\nexport const setNextPrev = (next, prev) => {\n  return dispatch => {\n    let data = {\n      next: next,\n      prev: prev\n    }\n    dispatch(request(data))\n  }\n  function request(data) {\n    return { type: SET_IMAGE_STATE, payload: data }\n  }\n}\n","import {\n  ANALYTICS_TIME_LABEL_FAILURE,\n  ANALYTICS_TIME_LABEL_REQUEST,\n  ANALYTICS_TIME_LABEL_SUCCESS\n} from '../constants/index'\n\nimport FetchApi from '../utils/FetchAPI'\n\nexport const getTimeLabel = (projectId, callback) => {\n  return dispatch => {\n    dispatch(request())\n    FetchApi(\n      'GET',\n      '/api/v1/analytics/' + projectId + '/timeLabel/get',\n      null,\n      true\n    )\n      .then(res => {\n        dispatch(success(res.data.body))\n        callback()\n      })\n      .catch(err => {\n        if (err.response) {\n          err.response.data\n            ? dispatch(failure(err.response.data.msg))\n            : dispatch(failure(err.response.statusText, null))\n        }\n      })\n  }\n  function request() {\n    return { type: ANALYTICS_TIME_LABEL_REQUEST }\n  }\n  function success(data) {\n    return { type: ANALYTICS_TIME_LABEL_SUCCESS, payload: data }\n  }\n  function failure(error) {\n    return { type: ANALYTICS_TIME_LABEL_FAILURE, payload: error }\n  }\n}\n","export * from './auth'\nexport * from './register'\nexport * from './user'\nexport * from './project/index'\nexport * from './label'\nexport * from './image'\nexport * from './analytics'\n"],"sourceRoot":""}