{"version":3,"sources":["components/project/searchUser.js","components/project/team.js"],"names":["SearchUser","props","resetComponent","setState","isLoading","value","results","handleResultSelect","e","result","updateState","email","handleSearchChange","searchUser","trim","setTimeout","state","length","generateResults","search","map","user","index","push","key","title","name","description","id","_id","this","Search","className","size","loading","onResultSelect","onSearchChange","_","debounce","leading","placeholder","minCharacters","Component","connect","dispatch","query","getSearchUser","TeamIndex","handleAddMember","open","handleChange","target","handleMemberSubmit","project","addMember","memberEmail","check","projectId","fetchProjectCallback","close","handleDelete","memberDelete","fetchProject","data","actions","history","Container","errors","Message","negative","Header","msg","success","header","isadding","Dimmer","active","Loader","indeterminate","isdeleting","Modal","onClose","Content","Actions","Button","positive","onClick","content","Table","color","celled","padded","striped","Row","HeaderCell","singleLine","Body","members","member","Cell","as","role","collapsing","userDetails","Icon","icon","labelPosition","projects","currentProject","projectActions","callback"],"mappings":"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","file":"static/js/20.bc5f57c9.chunk.js","sourcesContent":["import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Search } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { getSearchUser } from '../../actions/index'\nimport './css/searchUser.css'\n\nclass SearchUser extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: false,\n      value: '',\n      results: []\n    }\n  }\n  componentWillMount() {\n    this.resetComponent()\n  }\n  resetComponent = () =>\n    this.setState({ isLoading: false, value: '', results: [] })\n\n  handleResultSelect = (e, { result }) => {\n    const { updateState } = this.props\n    this.setState({ value: result.email }, updateState(result.email))\n  }\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value })\n    this.props.searchUser(value.trim())\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.resetComponent()\n      this.setState({\n        isLoading: false\n      })\n    }, 300)\n  }\n\n  generateResults = () => {\n    const { search } = this.props\n    let results = []\n    if (search == null) {\n      return results\n    }\n\n    search.map((user, index) =>\n      user\n        ? results.push({\n            key: index,\n            title: user.name,\n            description: user.email,\n            email: user.email,\n            id: user._id\n          })\n        : null\n    )\n\n    return results\n  }\n  render() {\n    const { isLoading, value } = this.state\n\n    return (\n      <Search\n        className=\"searchbar-user-parent\"\n        size=\"large\"\n        loading={isLoading}\n        onResultSelect={this.handleResultSelect}\n        onSearchChange={_.debounce(this.handleSearchChange, 500, {\n          leading: true\n        })}\n        results={this.generateResults()}\n        value={value}\n        placeholder=\"Search members..\"\n        minCharacters={1}\n      />\n    )\n  }\n}\n\nSearchUser.propTypes = {\n  updateState: PropTypes.func,\n  search: PropTypes.array,\n  searchUser: PropTypes.func\n}\n\nconst mapStateToProps = state => {\n  return {\n    search: state.searchUser\n  }\n}\n\nconst mapActionToProps = dispatch => {\n  return {\n    searchUser: query => {\n      return dispatch(getSearchUser(query))\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapActionToProps\n)(SearchUser)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport {\n  Container,\n  Table,\n  Header,\n  Button,\n  Icon,\n  Modal,\n  Dimmer,\n  Loader,\n  Message\n} from 'semantic-ui-react'\nimport { addMember, fetchProject, memberDelete } from '../../actions'\nimport SearchUser from './searchUser.js'\nimport './css/team.css'\n\nclass TeamIndex extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      memberEmail: ''\n    }\n  }\n  handleAddMember = () => {\n    this.setState({\n      open: !this.state.open\n    })\n  }\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  handleMemberSubmit = () => {\n    const { project, addMember } = this.props\n    const { memberEmail } = this.state\n    this.setState({\n      check: true\n    })\n    let data = {\n      memberEmail: memberEmail,\n      projectId: project.projectId\n    }\n    addMember(data, this.fetchProjectCallback)\n    this.close()\n  }\n  close = () => this.setState({ open: false })\n  handleDelete = email => {\n    const { memberDelete, project } = this.props\n    memberDelete(email, project.projectId, this.fetchProjectCallback)\n  }\n  fetchProjectCallback = () => {\n    const { fetchProject, project } = this.props\n    fetchProject(project.projectId)\n  }\n  updateState = data => {\n    this.setState({\n      memberEmail: data\n    })\n  }\n  render() {\n    const { project, actions, history, user } = this.props\n    const { open } = this.state\n    return (\n      <Container>\n        {actions.errors ? (\n          <Message negative>\n            <Message.Header>{actions.errors}</Message.Header>\n          </Message>\n        ) : null}\n        {actions.msg ? <Message success header={actions.msg} /> : null}\n        {actions.isadding ? (\n          <Dimmer active={actions.isadding}>\n            <Loader indeterminate>Adding member :)</Loader>\n          </Dimmer>\n        ) : null}\n        {actions.isdeleting ? (\n          <Dimmer active={actions.isdeleting}>\n            <Loader indeterminate>Removing member :(</Loader>\n          </Dimmer>\n        ) : null}\n        <Modal size=\"small\" open={open} onClose={this.close}>\n          <Modal.Content>\n            <p>Enter Member email:</p>\n          </Modal.Content>\n          <Modal.Actions>\n            <SearchUser history={history} updateState={this.updateState} />\n            <Button\n              positive\n              onClick={this.handleMemberSubmit}\n              content=\"Add member\"\n            />\n          </Modal.Actions>\n        </Modal>\n        <Table color=\"green\" celled padded striped>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell singleLine>Project Members</Table.HeaderCell>\n              <Table.HeaderCell>Role</Table.HeaderCell>\n              <Table.HeaderCell />\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {project &&\n              project.members &&\n              project.members.map((member, index) => (\n                <Table.Row key={index}>\n                  <Table.Cell>\n                    <Header as=\"h4\">{member.member.name}</Header>\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Header as=\"h4\">{member.role}</Header>\n                  </Table.Cell>\n\n                  <Table.Cell collapsing>\n                    {member.role !== 'Admin' &&\n                    member.member.email !== user.userDetails.email ? (\n                      <Icon\n                        className=\"team-remove-user-icon\"\n                        name=\"user delete\"\n                        onClick={() => this.handleDelete(member.member.email)}\n                      />\n                    ) : null}\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n          </Table.Body>\n        </Table>\n        <div className=\"add-member-button\">\n          <Button\n            icon\n            className=\"add-member\"\n            onClick={this.handleAddMember}\n            labelPosition=\"left\"\n          >\n            <Icon name=\"add\" />\n            Add member\n          </Button>\n        </div>\n      </Container>\n    )\n  }\n}\n\nTeamIndex.propTypes = {\n  user: PropTypes.object,\n  project: PropTypes.object,\n  actions: PropTypes.object,\n  history: PropTypes.object,\n  fetchProject: PropTypes.func,\n  match: PropTypes.object,\n  memberDelete: PropTypes.func,\n  addMember: PropTypes.func\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    project: state.projects.currentProject,\n    actions: state.projects.projectActions\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addMember: (data, callback) => {\n      return dispatch(addMember(data, callback))\n    },\n    fetchProject: data => {\n      return dispatch(fetchProject(data))\n    },\n    memberDelete: (email, projectId, callback) => {\n      return dispatch(memberDelete(email, projectId, callback))\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TeamIndex)\n"],"sourceRoot":""}