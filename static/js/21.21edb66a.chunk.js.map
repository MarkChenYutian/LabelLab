{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/elements/Header/HeaderSubheader.js","../node_modules/semantic-ui-react/dist/es/elements/Header/HeaderContent.js","../node_modules/semantic-ui-react/dist/es/elements/Header/Header.js","components/project/projectDesc.js"],"names":["HeaderSubheader","props","children","className","content","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","create","createShorthandFactory","HeaderContent","Header","attached","block","color","disabled","dividing","floated","icon","image","inverted","size","sub","subheader","textAlign","useKeyOnly","useValueAndKey","useKeyOrValueAndKey","useTextAlignProp","iconElement","Icon","autoGenerateKey","imageElement","Image","subheaderElement","Content","Subheader","ProjectDescriptionIndex","handleUpdate","setState","edit","state","handleSubmit","updateProject","project","projectDescription","desc","projectId","callback","fetchProject","handleChange","e","target","name","value","prevProps","this","actions","isfetching","active","indeterminate","as","onClick","placeholder","onChange","Component","connect","projects","currentProject","projectActions","dispatch","data"],"mappings":"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","file":"static/js/21.21edb66a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Headers may contain subheaders.\n */\n\nfunction HeaderSubheader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('sub header', className);\n  var rest = getUnhandledProps(HeaderSubheader, props);\n  var ElementType = getElementType(HeaderSubheader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderSubheader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderSubheader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nHeaderSubheader.create = createShorthandFactory(HeaderSubheader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default HeaderSubheader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Header content wraps the main content when there is an adjacent Icon or Image.\n */\n\nfunction HeaderContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(HeaderContent, props);\n  var ElementType = getElementType(HeaderContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default HeaderContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useTextAlignProp, useKeyOrValueAndKey, useKeyOnly } from '../../lib';\nimport Icon from '../Icon';\nimport Image from '../Image';\nimport HeaderSubheader from './HeaderSubheader';\nimport HeaderContent from './HeaderContent';\n/**\n * A header provides a short summary of content\n */\n\nfunction Header(props) {\n  var attached = props.attached,\n      block = props.block,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      disabled = props.disabled,\n      dividing = props.dividing,\n      floated = props.floated,\n      icon = props.icon,\n      image = props.image,\n      inverted = props.inverted,\n      size = props.size,\n      sub = props.sub,\n      subheader = props.subheader,\n      textAlign = props.textAlign;\n  var classes = cx('ui', color, size, useKeyOnly(block, 'block'), useKeyOnly(disabled, 'disabled'), useKeyOnly(dividing, 'dividing'), useValueAndKey(floated, 'floated'), useKeyOnly(icon === true, 'icon'), useKeyOnly(image === true, 'image'), useKeyOnly(inverted, 'inverted'), useKeyOnly(sub, 'sub'), useKeyOrValueAndKey(attached, 'attached'), useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(Header, props);\n  var ElementType = getElementType(Header, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var iconElement = Icon.create(icon, {\n    autoGenerateKey: false\n  });\n  var imageElement = Image.create(image, {\n    autoGenerateKey: false\n  });\n  var subheaderElement = HeaderSubheader.create(subheader, {\n    autoGenerateKey: false\n  });\n\n  if (iconElement || imageElement) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), iconElement || imageElement, (content || subheaderElement) && React.createElement(HeaderContent, null, content, subheaderElement));\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, subheaderElement);\n}\n\nHeader.handledProps = [\"as\", \"attached\", \"block\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"dividing\", \"floated\", \"icon\", \"image\", \"inverted\", \"size\", \"sub\", \"subheader\", \"textAlign\"];\nHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach header  to other content, like a segment. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** Format header to appear inside a content block. */\n  block: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Color of the header. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Show that the header is inactive. */\n  disabled: PropTypes.bool,\n\n  /** Divide header from the content below it. */\n  dividing: PropTypes.bool,\n\n  /** Header can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Add an icon by icon name or pass an Icon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Add an image by img src or pass an Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Inverts the color of the header for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Content headings are sized with em and are based on the font-size of their container. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'mini')),\n\n  /** Headers may be formatted to label smaller or de-emphasized content. */\n  sub: PropTypes.bool,\n\n  /** Shorthand for Header.Subheader. */\n  subheader: customPropTypes.itemShorthand,\n\n  /** Align header content. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nHeader.Content = HeaderContent;\nHeader.Subheader = HeaderSubheader;\nexport default Header;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport {\n  Header,\n  Icon,\n  TextArea,\n  Form,\n  Button,\n  Dimmer,\n  Loader\n} from 'semantic-ui-react'\nimport { updateProject, fetchProject } from '../../actions/index'\nimport './css/projectDesc.css'\n\nclass ProjectDescriptionIndex extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      edit: false,\n      desc: ''\n    }\n  }\n  componentDidUpdate(prevProps) {\n    const { project } = this.props\n    if (prevProps.project !== project) {\n      this.setState({\n        desc: project.projectDescription\n      })\n    }\n  }\n  handleUpdate = () => {\n    this.setState({\n      edit: !this.state.edit\n    })\n  }\n  handleSubmit = () => {\n    const { updateProject, project } = this.props\n    let data = {\n      projectDescription: this.state.desc\n    }\n\n    updateProject(data, project.projectId, this.callback)\n  }\n  callback = () => {\n    const { project, fetchProject } = this.props\n    this.setState({\n      edit: false\n    })\n    fetchProject(project.projectId)\n  }\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  render() {\n    const { actions } = this.props\n    const { edit, desc } = this.state\n    return (\n      <div className=\"projectDesc-parent\">\n        {actions.isfetching ? (\n          <Dimmer active>\n            <Loader indeterminate>Have some patience :)</Loader>\n          </Dimmer>\n        ) : null}\n        <div className=\"projectDesc-header\">\n          <Header content=\"Project Description\" as=\"h4\" />\n          <Icon name=\"pencil alternate\" onClick={this.handleUpdate} />\n        </div>\n        {edit ? (\n          <Form>\n            <TextArea\n              placeholder=\"Write some project description\"\n              value={desc}\n              onChange={this.handleChange}\n              name=\"desc\"\n            />\n            <Button\n              className=\"projectDesc-submit\"\n              floated=\"right\"\n              onClick={this.handleSubmit}\n            >\n              Submit\n            </Button>\n          </Form>\n        ) : null}\n        {!edit && desc ? desc : null}\n      </div>\n    )\n  }\n}\n\nProjectDescriptionIndex.propTypes = {\n  project: PropTypes.object,\n  actions: PropTypes.object,\n  history: PropTypes.object,\n  fetchProject: PropTypes.func,\n  updateProject: PropTypes.func\n}\n\nconst mapStateToProps = state => {\n  return {\n    project: state.projects.currentProject,\n    actions: state.projects.projectActions\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateProject: (data, projectId, callback) => {\n      return dispatch(updateProject(data, projectId, callback))\n    },\n    fetchProject: data => {\n      return dispatch(fetchProject(data))\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProjectDescriptionIndex)\n"],"sourceRoot":""}