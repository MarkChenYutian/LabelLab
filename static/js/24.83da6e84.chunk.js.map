{"version":3,"sources":["components/project/label/labelItem.js","components/project/label/index.js"],"names":["options","key","text","value","LabelItem","this","props","onChange","onDelete","className","Form","Field","placeholder","control","defaultValue","name","e","target","Select","label","type","change","style","maxWidth","Button","onClick","Icon","Component","connect","LabelIndex","toggleForm","setState","showform","data","handleSubmit","project","createLabel","preventDefault","state","projectId","callback","fetchLabels","handleDelete","deleteLabel","_id","actions","labels","isdeleting","Dimmer","active","Loader","indeterminate","undefined","map","index","onSubmit","projects","currentProject","labelActions","dispatch","labelId"],"mappings":"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","file":"static/js/24.83da6e84.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Button, Icon } from 'semantic-ui-react'\nimport '../css/labelItem.css'\n\nconst options = [\n  { key: 'bbox', text: 'Draw a bounding box', value: 'bbox' },\n  { key: 'polygon', text: 'Draw a polygon figure', value: 'polygon' }\n]\n\nclass LabelItem extends Component {\n  render() {\n    const { value, onChange, onDelete } = this.props\n    return (\n      <div className=\"form-card-parent\">\n        <Form className=\"form-card flex\">\n          <div className=\"form-card-child\">\n            <Form.Field\n              placeholder=\"Label name\"\n              control=\"input\"\n              defaultValue={value.name}\n              className=\"form-card-child-field\"\n              onChange={e =>\n                onChange(value, { ...value, name: e.target.value })\n              }\n            />\n            <Form.Select\n              label=\"Label type\"\n              options={options}\n              defaultValue={value.type}\n              onChange={(e, change) =>\n                onChange(value, { ...value, type: change.value })\n              }\n              style={{ maxWidth: 400 }}\n            />\n          </div>\n          <div className=\"form-button-parent\">\n            <Button\n              type=\"button\"\n              className=\"form-button-itself\"\n              onClick={() => onDelete(value)}\n            >\n              <Icon name=\"trash\" />\n            </Button>\n          </div>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(LabelItem)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Dimmer, Loader, Button, Form, Icon } from 'semantic-ui-react'\nimport { fetchLabels, createLabel, deleteLabel } from '../../../actions/index'\nimport LabelItem from './labelItem.js'\nimport '../css/labelItem.css'\n\nconst options = [\n  { key: 'bbox', text: 'Draw a bounding box', value: 'bbox' },\n  { key: 'polygon', text: 'Draw a polygon figure', value: 'polygon' }\n]\n\nclass LabelIndex extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showform: false,\n      name: 'New Label',\n      type: 'bbox'\n    }\n  }\n  toggleForm = () => {\n    this.setState({\n      showform: true\n    })\n  }\n  onChange = (name, data) => {\n    this.setState({\n      [name]: data\n    })\n  }\n  handleSubmit = e => {\n    const { project, createLabel } = this.props\n    e.preventDefault()\n    let data = {\n      name: this.state.name,\n      type: this.state.type,\n      projectId: project.projectId\n    }\n    createLabel(data, this.callback)\n  }\n  callback = () => {\n    const { project, fetchLabels } = this.props\n    this.setState({\n      showform: false,\n      name: 'New Label',\n      type: 'bbox'\n    })\n    fetchLabels(project.projectId)\n  }\n  handleDelete = value => {\n    const { project, deleteLabel, fetchLabels } = this.props\n    deleteLabel(value._id, fetchLabels(project.projectId))\n  }\n  render() {\n    const value = {\n      name: 'New Label',\n      type: 'bbox'\n    }\n    const { actions, labels } = this.props\n    const { showform } = this.state\n    return (\n      <div>\n        {actions.isdeleting ? (\n          <Dimmer active>\n            <Loader indeterminate>Removing Label :)</Loader>\n          </Dimmer>\n        ) : null}\n        {labels !== undefined &&\n          labels.map((label, index) => (\n            <LabelItem\n              value={label}\n              key={index}\n              onChange={this.onChange}\n              onDelete={this.handleDelete}\n            />\n          ))}\n        <Button onClick={this.toggleForm}>Create new Label</Button>\n        {showform ? (\n          <Form className=\"form-card flex\" onSubmit={this.handleSubmit}>\n            <div className=\"form-card-child\">\n              <Form.Field\n                placeholder=\"Label name\"\n                control=\"input\"\n                defaultValue={value.name}\n                className=\"form-card-child-field\"\n                onChange={e => this.onChange(e.target.name, e.target.value)}\n                name=\"name\"\n              />\n              <Form.Select\n                label=\"Label type\"\n                options={options}\n                defaultValue={value.type}\n                onChange={(e, change) =>\n                  this.onChange(change.name, change.value)\n                }\n                style={{ maxWidth: 400 }}\n                name=\"type\"\n              />\n            </div>\n            <div className=\"form-button-parent\">\n              <Button\n                type=\"button\"\n                className=\"form-button-itself\"\n                onClick={this.onChange}\n              >\n                <Icon name=\"trash\" />\n              </Button>\n            </div>\n            <Button type=\"submit\">Create</Button>\n          </Form>\n        ) : null}\n      </div>\n    )\n  }\n}\n\nLabelIndex.propTypes = {\n  match: PropTypes.object,\n  project: PropTypes.object,\n  actions: PropTypes.object,\n  labels: PropTypes.array,\n  fetchLabels: PropTypes.func,\n  createLabel: PropTypes.func,\n  deleteLabel: PropTypes.func\n}\n\nconst mapStateToProps = state => {\n  return {\n    project: state.projects.currentProject,\n    actions: state.labels.labelActions,\n    labels: state.labels.labels\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchLabels: projectId => {\n      return dispatch(fetchLabels(projectId))\n    },\n    createLabel: (data, callback) => {\n      return dispatch(createLabel(data, callback))\n    },\n    deleteLabel: (labelId, callback) => {\n      return dispatch(deleteLabel(labelId, callback))\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LabelIndex)\n"],"sourceRoot":""}