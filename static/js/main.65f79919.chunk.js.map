{"version":3,"sources":["constants/index.js","constants/auth.js","constants/register.js","constants/user.js","constants/project/member.js","constants/project/fetchDetails.js","constants/project/search.js","constants/project/projectDetails.js","constants/image.js","constants/label.js","constants/analytics.js","components/loading/index.js","reducers/auth.js","reducers/register.js","reducers/user.js","reducers/project.js","reducers/image.js","reducers/label.js","reducers/search.js","reducers/searchUser.js","reducers/analytics.js","reducers/index.js","utils/store.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["TOKEN_TYPE","Loading","Component","connect","initialState","isAuthenticated","isAuthenticating","statusText","details","email","error","errField","auth","state","action","type","LOGIN_REQUEST","LOGIN_SUCCESS","payload","LOGIN_FAILURE","other","LOGOUT_REQUEST","LOGOUT_SUCCESS","intialState","isRegistering","register","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","userActions","isuploading","isfetching","isinitializing","errors","userDetails","name","username","thumbnail","profileImage","userProfile","totalLabels","totalProjects","totalImages","user","UPLOAD_USER_IMAGE_REQUEST","UPLOAD_USER_IMAGE_FAILURE","UPLOAD_USER_IMAGE_SUCCESS","SET_USER_DATA_REQUEST","SET_USER_DATA_SUCCESS","SET_USER_DATA_FAILURE","FETCH_COUNT_REQUEST","FETCH_COUNT_SUCCESS","FETCH_COUNT_FAILURE","projectActions","isadding","isdeleting","msg","currentProject","allProjects","project","INITIALIZE_PROJECT_REQUEST","INITIALIZE_PROJECT_FAILURE","INITIALIZE_PROJECT_SUCCESS","projectName","images","image","FETCH_PROJECT_REQUEST","FETCH_PROJECT_FAILURE","FETCH_PROJECT_SUCCESS","projectId","_id","projectDescription","members","FETCH_PROJECT_ALL_REQUEST","FETCH_PROJECT_ALL_FAILURE","FETCH_PROJECT_ALL_SUCCESS","ADD_MEMBER_REQUEST","ADD_MEMBER_FAILURE","ADD_MEMBER_SUCCESS","DELETE_MEMBER_REQUEST","DELETE_MEMBER_FAILURE","DELETE_MEMBER_SUCCESS","imageActions","isposting","currentImage","nextImage","prevImage","POST_IMAGE_REQUEST","POST_IMAGE_FAILURE","POST_IMAGE_SUCCESS","FETCH_IMAGE_REQUEST","FETCH_IMAGE_FAILURE","FETCH_IMAGE_SUCCESS","DELETE_IMAGE_REQUEST","DELETE_IMAGE_FAILURE","DELETE_IMAGE_SUCCESS","SET_IMAGE_STATE","next","prev","labelActions","isupdating","labels","FETCH_LABEL_REQUEST","FETCH_LABEL_FAILURE","FETCH_LABEL_SUCCESS","CREATE_LABEL_REQUEST","CREATE_LABEL_FAILURE","CREATE_LABEL_SUCCESS","UPDATE_LABEL_REQUEST","UPDATE_LABEL_FAILURE","UPDATE_LABEL_SUCCESS","DELETE_LABEL_REQUEST","DELETE_LABEL_FAILURE","DELETE_LABEL_SUCCESS","searchProjects","SEARCH_PROJECTS","SEARCH_PROJECTS_FAILURE","searchUser","SEARCH_USER","SEARCH_USER_FAILURE","data","analytics","ANALYTICS_TIME_LABEL_REQUEST","ANALYTICS_TIME_LABEL_SUCCESS","ANALYTICS_TIME_LABEL_FAILURE","rootReducers","combineReducers","projects","label","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","Dashboard","Loadable","loader","loading","Logout","Login","PrivateRoute","Register","Profile","Labeller","Project","Redirect","App","Fragment","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wHAAA,+DCA6B,mBDA7B,4BCCkB,mBDDlB,4BCEkB,mBDFlB,4BCImB,oBDJnB,4BCKmB,oBDLnB,4BEAgC,sBFAhC,4BECqB,sBFDrB,4BEEqB,sBFFrB,6BGAqC,2BHArC,6BGC0B,2BHD1B,6BGE0B,2BHF1B,6BGG8B,+BHH9B,6BGI8B,+BHJ9B,6BGK8B,+BHL9B,4BGMwB,yBHNxB,4BGOwB,yBHPxB,4BGQwB,yBHRxB,4BGSgB,iBHThB,6BGUwB,yBHVxB,4BGWmB,oBHXnB,4BGY2B,4BHZ3B,4BIAqC,2BJArC,4BIC0B,2BJD1B,4BIE0B,2BJF1B,4BIGuB,wBJHvB,4BIIuB,wBJJvB,4BIKuB,wBJLvB,4BKAqC,2BLArC,4BKC0B,2BLD1B,4BKE0B,2BLF1B,4BKG8B,+BLH9B,4BKI8B,+BLJ9B,4BKK8B,+BLL9B,4BKMwB,yBLNxB,4BKOwB,yBLPxB,4BKQwB,yBLRxB,4BMA+B,qBNA/B,4BMC4B,6BND5B,4BOA0C,gCPA1C,4BOC+B,gCPD/B,4BOE+B,gCPF/B,6BOG2B,4BPH3B,6BOI2B,4BPJ3B,6BOK2B,4BPL3B,4BQAkC,wBRAlC,4BQCuB,wBRDvB,4BQEuB,wBRFvB,4BQGwB,yBRHxB,4BQIwB,yBRJxB,4BQKwB,yBRLxB,4BQMyB,0BRNzB,4BQOyB,0BRPzB,4BQQyB,0BRRzB,6BQSoB,qBRTpB,4BSAoC,0BTApC,4BSCyB,0BTDzB,4BSEyB,0BTFzB,6BSGyB,0BTHzB,6BSIyB,0BTJzB,6BSKyB,0BTLzB,4BSMyB,0BTNzB,4BSOyB,0BTPzB,4BSQyB,0BTRzB,4BUA4C,kCVA5C,4BUCiC,kCVDjC,4BUEiC,kCVK1B,IAAMA,EAAa,S,oGWJpBC,E,iLAEF,OAAO,oD,GAFWC,aAMPC,gBACb,KACA,KAFaA,CAGbF,I,gMCJIG,EAAe,CACnBC,iBAAiB,EACjBC,kBAAkB,EAClBC,WAAY,GACZC,QAAS,CACPC,MAAO,IAETC,OAAO,EACPC,SAAU,IAiDGC,EA9CF,WAAmC,IAAlCC,EAAiC,uDAAzBT,EAAcU,EAAW,uCAC7C,OAAQA,EAAOC,MACb,KAAKC,IACH,OAAO,eACFH,EAD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","file":"static/js/main.65f79919.chunk.js","sourcesContent":["export * from './auth'\nexport * from './register'\nexport * from './user'\nexport * from './project/index'\nexport * from './image'\nexport * from './label'\nexport * from './analytics'\nexport const TOKEN_TYPE = 'admin'\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST',\n  LOGIN_SUCCESS = 'LOGIN_SUCCESS',\n  LOGIN_FAILURE = 'LOGIN_FAILURE',\n  SET_USER_AUTH = 'SET_USER_AUTH',\n  LOGOUT_REQUEST = 'LOGOUT_REQUEST',\n  LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\n","export const REGISTER_REQUEST = 'REGISTER_REQUEST',\n  REGISTER_SUCCESS = 'REGISTER_SUCCESS',\n  REGISTER_FAILURE = 'REGISTER_FAILURE'\n","export const SET_USER_DATA_REQUEST = 'SET_USER_DATA_REQUEST',\n  SET_USER_DATA_SUCCESS = 'SET_USER_DATA_SUCCESS',\n  SET_USER_DATA_FAILURE = 'SET_USER_DATA_FAILURE',\n  UPLOAD_USER_IMAGE_REQUEST = 'UPLOAD_USER_IMAGE_REQUEST',\n  UPLOAD_USER_IMAGE_SUCCESS = 'UPLOAD_USER_IMAGE_SUCCESS',\n  UPLOAD_USER_IMAGE_FAILURE = 'UPLOAD_USER_IMAGE_FAILURE',\n  FETCH_COUNT_FAILURE = 'FETCH_COUNT_FAILURE',\n  FETCH_COUNT_REQUEST = 'FETCH_COUNT_REQUEST',\n  FETCH_COUNT_SUCCESS = 'FETCH_COUNT_SUCCESS',\n  SEARCH_USER = 'SEARCH_USER',\n  SEARCH_USER_FAILURE = 'SEARCH_USER_FAILURE',\n  EDIT_USER_INFO = 'EDIT_USER_INFO',\n  EDIT_USER_INFO_FAILURE = 'EDIT_USER_INFO_FAILURE'\n","export const DELETE_MEMBER_FAILURE = 'DELETE_MEMBER_FAILURE',\n  DELETE_MEMBER_REQUEST = 'DELETE_MEMBER_REQUEST',\n  DELETE_MEMBER_SUCCESS = 'DELETE_MEMBER_SUCCESS',\n  ADD_MEMBER_REQUEST = 'ADD_MEMBER_REQUEST',\n  ADD_MEMBER_SUCCESS = 'ADD_MEMBER_SUCCESS',\n  ADD_MEMBER_FAILURE = 'ADD_MEMBER_FAILURE'\n","export const FETCH_PROJECT_REQUEST = 'FETCH_PROJECT_REQUEST',\n  FETCH_PROJECT_SUCCESS = 'FETCH_PROJECT_SUCCESS',\n  FETCH_PROJECT_FAILURE = 'FETCH_PROJECT_FAILURE',\n  FETCH_PROJECT_ALL_FAILURE = 'FETCH_PROJECT_ALL_FAILURE',\n  FETCH_PROJECT_ALL_REQUEST = 'FETCH_PROJECT_ALL_REQUEST',\n  FETCH_PROJECT_ALL_SUCCESS = 'FETCH_PROJECT_ALL_SUCCESS',\n  FETCH_LABEL_SUCCESS = 'FETCH_LABEL_SUCCESS',\n  FETCH_LABEL_REQUEST = 'FETCH_LABEL_REQUEST',\n  FETCH_LABEL_FAILURE = 'FETCH_LABEL_FAILURE'\n","export const SEARCH_PROJECTS = 'SEARCH_PROJECTS',\n  SEARCH_PROJECTS_FAILURE = 'SEARCH_PROJECTS_FAILURE'\n","export const INITIALIZE_PROJECT_REQUEST = 'INITIALIZE_PROJECT_REQUEST',\n  INITIALIZE_PROJECT_SUCCESS = 'INITIALIZE_PROJECT_SUCCESS',\n  INITIALIZE_PROJECT_FAILURE = 'INITIALIZE_PROJECT_FAILURE',\n  UPDATE_PROJECT_REQUEST = 'UPDATE_PROJECT_REQUEST',\n  UPDATE_PROJECT_SUCCESS = 'UPDATE_PROJECT_SUCCESS',\n  UPDATE_PROJECT_FAILURE = 'UPDATE_PROJECT_FAILURE'\n","export const POST_IMAGE_REQUEST = 'POST_IMAGE_REQUEST',\n  POST_IMAGE_SUCCESS = 'POST_IMAGE_SUCCESS',\n  POST_IMAGE_FAILURE = 'POST_IMAGE_FAILURE',\n  FETCH_IMAGE_FAILURE = 'FETCH_IMAGE_FAILURE',\n  FETCH_IMAGE_REQUEST = 'FETCH_IMAGE_REQUEST',\n  FETCH_IMAGE_SUCCESS = 'FETCH_IMAGE_SUCCESS',\n  DELETE_IMAGE_REQUEST = 'DELETE_IMAGE_REQUEST',\n  DELETE_IMAGE_FAILURE = 'DELETE_IMAGE_FAILURE',\n  DELETE_IMAGE_SUCCESS = 'DELETE_IMAGE_SUCCESS',\n  SET_IMAGE_STATE = 'SET_IMAGE_STATE'\n","export const CREATE_LABEL_REQUEST = 'CREATE_LABEL_REQUEST',\n  CREATE_LABEL_SUCCESS = 'CREATE_LABEL_SUCCESS',\n  CREATE_LABEL_FAILURE = 'CREATE_LABEL_FAILURE',\n  UPDATE_LABEL_FAILURE = 'UPDATE_LABEL_FAILURE',\n  UPDATE_LABEL_REQUEST = 'UPDATE_LABEL_REQUEST',\n  UPDATE_LABEL_SUCCESS = 'UPDATE_LABEL_SUCCESS',\n  DELETE_LABEL_FAILURE = 'DELETE_LABEL_FAILURE',\n  DELETE_LABEL_REQUEST = 'DELETE_LABEL_REQUEST',\n  DELETE_LABEL_SUCCESS = 'DELETE_LABEL_SUCCESS'\n","export const ANALYTICS_TIME_LABEL_FAILURE = 'ANALYTICS_TIME_LABEL_FAILURE',\n  ANALYTICS_TIME_LABEL_REQUEST = 'ANALYTICS_TIME_LABEL_REQUEST',\n  ANALYTICS_TIME_LABEL_SUCCESS = 'ANALYTICS_TIME_LABEL_SUCCESS'\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass Loading extends Component {\n  render() {\n    return <div>Loading........</div>\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(Loading)\n","import {\n  LOGIN_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS\n} from '../constants/index'\n\nconst initialState = {\n  isAuthenticated: false,\n  isAuthenticating: false,\n  statusText: '',\n  details: {\n    email: ''\n  },\n  error: false,\n  errField: ''\n}\n\nconst auth = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isAuthenticating: true\n      }\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isAuthenticating: false,\n        statusText: 'You are logged in successfully!',\n        details: {\n          email: action.payload.email\n        }\n      }\n    case LOGIN_FAILURE:\n      return {\n        ...state,\n        isAuthenticated: false,\n        isAuthenticating: false,\n        statusText:\n          action.payload === 'Unauthorized' ? 'Email is not registered' : null,\n        error: true,\n        errField: action.other\n      }\n    case LOGOUT_REQUEST:\n      return {\n        ...state,\n        isAuthenticating: true\n      }\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: false,\n        isAuthenticating: false,\n        statusText: 'You have been successfully logged out',\n        details: {\n          email: ''\n        }\n      }\n    default:\n      return state\n  }\n}\nexport default auth\n","import {\n  REGISTER_FAILURE,\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS\n} from '../constants/index'\nconst intialState = {\n  isRegistering: false,\n  error: false,\n  errField: '',\n  statusText: ''\n}\nconst register = (state = intialState, action) => {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return {\n        ...state,\n        isRegistering: true,\n        error: false\n      }\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isRegistering: false,\n        statusText: action.payload,\n        error: false\n      }\n    case REGISTER_FAILURE:\n      return {\n        ...state,\n        isRegistering: false,\n        statusText: action.payload,\n        errField: action.other,\n        error: true\n      }\n    default:\n      return state\n  }\n}\n\nexport default register\n","import {\n  SET_USER_DATA_FAILURE,\n  SET_USER_DATA_REQUEST,\n  SET_USER_DATA_SUCCESS,\n  UPLOAD_USER_IMAGE_FAILURE,\n  UPLOAD_USER_IMAGE_REQUEST,\n  UPLOAD_USER_IMAGE_SUCCESS,\n  FETCH_COUNT_FAILURE,\n  FETCH_COUNT_REQUEST,\n  FETCH_COUNT_SUCCESS\n} from '../constants/index'\nconst initialState = {\n  userActions: {\n    isuploading: false,\n    isfetching: false,\n    isinitializing: false,\n    errors: ''\n  },\n  userDetails: {\n    name: '',\n    username: '',\n    thumbnail: '',\n    email: '',\n    profileImage: ''\n  },\n  userProfile: {\n    totalLabels: '',\n    totalProjects: '',\n    totalImages: ''\n  }\n}\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case UPLOAD_USER_IMAGE_REQUEST:\n      return {\n        ...state,\n        userActions: {\n          isuploading: true\n        }\n      }\n    case UPLOAD_USER_IMAGE_FAILURE:\n      return {\n        ...state,\n        userActions: {\n          isuploading: false,\n          errors: 'Something went wrong!'\n        }\n      }\n    case UPLOAD_USER_IMAGE_SUCCESS:\n      return {\n        ...state,\n        userActions: {\n          isuploading: false\n        }\n      }\n    case SET_USER_DATA_REQUEST:\n      return {\n        ...state,\n        userActions: {\n          isfetching: true\n        }\n      }\n    case SET_USER_DATA_SUCCESS:\n      return {\n        ...state,\n        userActions: {\n          isfetching: false\n        },\n        userDetails: {\n          name: action.payload.name,\n          email: action.payload.email,\n          username: action.payload.username,\n          thumbnail: action.payload.thumbnail,\n          profileImage: action.payload.profileImage\n        }\n      }\n    case SET_USER_DATA_FAILURE:\n      return {\n        ...state,\n        userActions: {\n          errors: action.payload\n        }\n      }\n    case FETCH_COUNT_REQUEST:\n      return {\n        ...state,\n        userActions: {\n          isfetching: true\n        }\n      }\n    case FETCH_COUNT_SUCCESS:\n      return {\n        ...state,\n        userActions: {\n          isfetching: false\n        },\n        userProfile: {\n          totalProjects: action.payload.totalProjects,\n          totalLabels: action.payload.totalLabels,\n          totalImages: action.payload.totalImages\n        }\n      }\n    case FETCH_COUNT_FAILURE:\n      return {\n        ...state,\n        userActions: {\n          errors: action.payload\n        }\n      }\n    default:\n      return state\n  }\n}\n\nexport default user\n","import {\n  INITIALIZE_PROJECT_FAILURE,\n  INITIALIZE_PROJECT_REQUEST,\n  INITIALIZE_PROJECT_SUCCESS,\n  FETCH_PROJECT_FAILURE,\n  FETCH_PROJECT_REQUEST,\n  FETCH_PROJECT_SUCCESS,\n  FETCH_PROJECT_ALL_FAILURE,\n  FETCH_PROJECT_ALL_REQUEST,\n  FETCH_PROJECT_ALL_SUCCESS,\n  ADD_MEMBER_FAILURE,\n  ADD_MEMBER_REQUEST,\n  ADD_MEMBER_SUCCESS,\n  DELETE_MEMBER_FAILURE,\n  DELETE_MEMBER_REQUEST,\n  DELETE_MEMBER_SUCCESS\n} from '../constants/index'\nconst initialState = {\n  projectActions: {\n    isuploading: false,\n    isfetching: false,\n    isinitializing: false,\n    isadding: false,\n    isdeleting: false,\n    errors: '',\n    msg: ''\n  },\n  currentProject: {},\n  allProjects: []\n}\n\nconst project = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZE_PROJECT_REQUEST:\n      return {\n        ...state,\n        projectActions: {\n          isinitializing: true\n        }\n      }\n    case INITIALIZE_PROJECT_FAILURE:\n      return {\n        ...state,\n        projectActions: {\n          isinitializing: false,\n          errors: action.payload\n        }\n      }\n    case INITIALIZE_PROJECT_SUCCESS:\n      return {\n        ...state,\n        projectActions: {\n          isinitializing: false\n        },\n        currentProject: {\n          projectName: action.payload.projectName,\n          images: action.payload.image\n        }\n      }\n    case FETCH_PROJECT_REQUEST:\n      return {\n        ...state,\n        projectActions: {\n          isfetching: true\n        }\n      }\n    case FETCH_PROJECT_FAILURE:\n      return {\n        ...state,\n        projectActions: {\n          isfetching: false,\n          errors: action.payload\n        }\n      }\n    case FETCH_PROJECT_SUCCESS:\n      return {\n        ...state,\n        projectActions: {\n          isfetching: false\n        },\n        currentProject: {\n          projectId: action.payload._id,\n          projectName: action.payload.projectName,\n          projectDescription: action.payload.projectDescription,\n          images: action.payload.image,\n          members: action.payload.members\n        }\n      }\n    case FETCH_PROJECT_ALL_REQUEST:\n      return {\n        ...state,\n        projectActions: {\n          isfetching: true\n        }\n      }\n    case FETCH_PROJECT_ALL_FAILURE:\n      return {\n        ...state,\n        projectActions: {\n          isfetching: false,\n          errors: action.payload\n        }\n      }\n    case FETCH_PROJECT_ALL_SUCCESS:\n      return {\n        ...state,\n        projectActions: {\n          isfetching: false\n        },\n        allProjects: action.payload.project\n      }\n    case ADD_MEMBER_REQUEST:\n      return {\n        ...state,\n        projectActions: {\n          isadding: true\n        }\n      }\n    case ADD_MEMBER_FAILURE:\n      return {\n        ...state,\n        projectActions: {\n          isadding: false,\n          errors: action.payload\n        }\n      }\n    case ADD_MEMBER_SUCCESS:\n      return {\n        ...state,\n        projectActions: {\n          isadding: false,\n          msg: 'Member added successfully'\n        }\n      }\n    case DELETE_MEMBER_REQUEST:\n      return {\n        ...state,\n        projectActions: {\n          isdeleting: true\n        }\n      }\n    case DELETE_MEMBER_FAILURE:\n      return {\n        ...state,\n        projectActions: {\n          isdeleting: false,\n          errors: action.payload\n        }\n      }\n    case DELETE_MEMBER_SUCCESS:\n      return {\n        ...state,\n        projectActions: {\n          isdeleting: false,\n          msg: 'Member removed successfully'\n        }\n      }\n    default:\n      return state\n  }\n}\n\nexport default project\n","import {\n  POST_IMAGE_FAILURE,\n  POST_IMAGE_REQUEST,\n  POST_IMAGE_SUCCESS,\n  FETCH_IMAGE_FAILURE,\n  FETCH_IMAGE_REQUEST,\n  FETCH_IMAGE_SUCCESS,\n  DELETE_IMAGE_FAILURE,\n  DELETE_IMAGE_REQUEST,\n  DELETE_IMAGE_SUCCESS,\n  SET_IMAGE_STATE\n} from '../constants/index'\n\nconst initialState = {\n  imageActions: {\n    isposting: false,\n    error: '',\n    isfetching: false,\n    isdeleting: false\n  },\n  currentImage: {},\n  nextImage: {},\n  prevImage: {}\n}\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case POST_IMAGE_REQUEST:\n      return {\n        ...state,\n        imageActions: {\n          isposting: true\n        }\n      }\n    case POST_IMAGE_FAILURE:\n      return {\n        ...state,\n        imageActions: {\n          isposting: false,\n          error: 'Something went wrong!'\n        }\n      }\n    case POST_IMAGE_SUCCESS:\n      return {\n        ...state,\n        imageActions: {\n          isposting: false,\n          error: 'Successfully submitted'\n        },\n        currentImage: action.payload\n      }\n    case FETCH_IMAGE_REQUEST:\n      return {\n        ...state,\n        imageActions: {\n          isfetching: true\n        }\n      }\n    case FETCH_IMAGE_FAILURE:\n      return {\n        ...state,\n        imageActions: {\n          isfetching: false,\n          error: 'Something went wrong!'\n        }\n      }\n    case FETCH_IMAGE_SUCCESS:\n      return {\n        ...state,\n        imageActions: {\n          isfetching: false,\n          error: 'Successfully fetched!'\n        },\n        currentImage: action.payload\n      }\n    case DELETE_IMAGE_REQUEST:\n      return {\n        ...state,\n        imageActions: {\n          isdeleting: true\n        }\n      }\n    case DELETE_IMAGE_FAILURE:\n      return {\n        ...state,\n        imageActions: {\n          isdeleting: false,\n          error: 'Something went wrong!'\n        }\n      }\n    case DELETE_IMAGE_SUCCESS:\n      return {\n        ...state,\n        imageActions: {\n          isdeleting: false,\n          error: 'Successfully deleted'\n        }\n      }\n    case SET_IMAGE_STATE:\n      return {\n        ...state,\n        nextImage: action.payload.next,\n        prevImage: action.payload.prev\n      }\n    default:\n      return state\n  }\n}\n\nexport default user\n","import {\n  FETCH_LABEL_FAILURE,\n  FETCH_LABEL_REQUEST,\n  FETCH_LABEL_SUCCESS,\n  CREATE_LABEL_FAILURE,\n  CREATE_LABEL_REQUEST,\n  CREATE_LABEL_SUCCESS,\n  UPDATE_LABEL_FAILURE,\n  UPDATE_LABEL_REQUEST,\n  UPDATE_LABEL_SUCCESS,\n  DELETE_LABEL_FAILURE,\n  DELETE_LABEL_REQUEST,\n  DELETE_LABEL_SUCCESS\n} from '../constants/index'\n\nconst initialState = {\n  labelActions: {\n    isposting: false,\n    error: '',\n    isfetching: false,\n    isupdating: false,\n    isdeleting: false\n  },\n  labels: []\n}\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_LABEL_REQUEST:\n      return {\n        ...state,\n        labelActions: {\n          isfetching: true\n        }\n      }\n    case FETCH_LABEL_FAILURE:\n      return {\n        ...state,\n        labelActions: {\n          isfetching: false,\n          error: 'Something went wrong!'\n        }\n      }\n    case FETCH_LABEL_SUCCESS:\n      return {\n        ...state,\n        labelActions: {\n          isfetching: false\n        },\n        labels: action.payload.labels\n      }\n    case CREATE_LABEL_REQUEST:\n      return {\n        ...state,\n        labelActions: {\n          isposting: true\n        }\n      }\n    case CREATE_LABEL_FAILURE:\n      return {\n        ...state,\n        labelActions: {\n          isposting: false,\n          error: 'Something went wrong!'\n        }\n      }\n    case CREATE_LABEL_SUCCESS:\n      return {\n        ...state,\n        labelActions: {\n          isposting: false\n        }\n      }\n    case UPDATE_LABEL_REQUEST:\n      return {\n        ...state,\n        labelActions: {\n          isupdating: true\n        }\n      }\n    case UPDATE_LABEL_FAILURE:\n      return {\n        ...state,\n        labelActions: {\n          isupdating: false,\n          error: 'Something went wrong!'\n        }\n      }\n    case UPDATE_LABEL_SUCCESS:\n      return {\n        ...state,\n        labelActions: {\n          isupdating: false\n        }\n      }\n\n    case DELETE_LABEL_REQUEST:\n      return {\n        ...state,\n        labelActions: {\n          isdeleting: true\n        }\n      }\n    case DELETE_LABEL_FAILURE:\n      return {\n        ...state,\n        labelActions: {\n          isdeleting: false,\n          error: 'Something went wrong!'\n        }\n      }\n    case DELETE_LABEL_SUCCESS:\n      return {\n        ...state,\n        labelActions: {\n          isdeleting: false\n        }\n      }\n    default:\n      return state\n  }\n}\n\nexport default user\n","import { SEARCH_PROJECTS, SEARCH_PROJECTS_FAILURE } from '../constants/index'\nconst searchProjects = (state = [], action) => {\n  switch (action.type) {\n    case SEARCH_PROJECTS:\n      return action.payload\n    case SEARCH_PROJECTS_FAILURE:\n      return action.payload\n    default:\n      return state\n  }\n}\nexport default searchProjects\n","import { SEARCH_USER, SEARCH_USER_FAILURE } from '../constants/index'\nconst searchUser = (state = [], action) => {\n  switch (action.type) {\n    case SEARCH_USER:\n      return action.payload\n    case SEARCH_USER_FAILURE:\n      return action.payload\n    default:\n      return state\n  }\n}\nexport default searchUser\n","import {\n  ANALYTICS_TIME_LABEL_FAILURE,\n  ANALYTICS_TIME_LABEL_REQUEST,\n  ANALYTICS_TIME_LABEL_SUCCESS\n} from '../constants/index'\nconst intialState = {\n  isfetching: false,\n  data: {}\n}\nconst analytics = (state = intialState, action) => {\n  switch (action.type) {\n    case ANALYTICS_TIME_LABEL_REQUEST:\n      return {\n        ...state,\n        isfetching: true\n      }\n    case ANALYTICS_TIME_LABEL_SUCCESS:\n      return {\n        ...state,\n        isfetching: false,\n        data: action.payload\n      }\n    case ANALYTICS_TIME_LABEL_FAILURE:\n      return {\n        ...state,\n        isfetching: false\n      }\n    default:\n      return state\n  }\n}\n\nexport default analytics\n","import { combineReducers } from 'redux'\nimport auth from './auth'\nimport register from './register'\nimport user from './user'\nimport project from './project'\nimport image from './image'\nimport label from './label'\nimport searchProjects from './search'\nimport searchUser from './searchUser'\nimport analytics from './analytics'\n\nconst rootReducers = combineReducers({\n  auth: auth,\n  register: register,\n  user: user,\n  projects: project,\n  images: image,\n  labels: label,\n  searchProjects: searchProjects,\n  searchUser: searchUser,\n  analytics\n})\n\nexport default rootReducers\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers/index'\n\nconst initialState = {}\nconst middleware = [thunk]\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport const store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleware))\n)\n","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Loadable from 'react-loadable'\nimport Loader from './loading/index'\n\nconst Loading = ({ error }) => {\n  if (error) return <div>Error loading component</div>\n  else return <Loader />\n}\n\nconst Dashboard = Loadable({\n  loader: () => import('./dashboard/index.js'),\n  loading: Loading\n})\n\nconst Logout = Loadable({\n  loader: () => import('./logout/index.js'),\n  loading: Loading\n})\n\nconst Login = Loadable({\n  loader: () => import('./login/index.js'),\n  loading: Loading\n})\n\nconst PrivateRoute = Loadable({\n  loader: () => import('../utils/pR'),\n  loading: Loading\n})\n\nconst Register = Loadable({\n  loader: () => import('./register/index.js'),\n  loading: Loading\n})\n\nconst Profile = Loadable({\n  loader: () => import('./profile/index.js'),\n  loading: Loading\n})\n\nconst Labeller = Loadable({\n  loader: () => import('./labeller/index.js'),\n  loading: Loading\n})\n\nconst Project = Loadable({\n  loader: () => import('./project/index'),\n  loading: Loading\n})\n\nconst Redirect = Loadable({\n  loader: () => import('./redirect.js'),\n  loading: Loading\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <Switch>\n            <Route path={`/redirect`} component={Redirect} />\n            <Route path={`/logout`} component={Logout} />\n            <Route path={`/login`} component={Login} />\n            <Route path={`/register`} component={Register} />\n            <PrivateRoute exact path={`/`} component={Dashboard} />\n            <PrivateRoute exact path={`/profile`} component={Profile} />\n            <PrivateRoute\n              path={`/labeller/:projectId/:imageId`}\n              component={Labeller}\n            />\n            <PrivateRoute path={`/project/:projectId`} component={Project} />\n          </Switch>\n        </React.Fragment>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App\n","import React, { Component } from 'react'\nimport AppIndex from './components/index'\nimport './App.css'\n\nexport default class App extends Component {\n  render() {\n    return <AppIndex />\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './utils/store'\nimport './index.css'\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}